apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def marvelAPIKeyFile = rootProject.file("apikey.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(marvelAPIKeyFile))

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.carol.musyoka.marvel"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField  ("String", "MARVEL_URL", '"https://gateway.marvel.com:443"')
        buildConfigField  ("String", "MARVEL_API_KEY", apiKeyProperties['API_KEY'])
        buildConfigField  ("String", "MARVEL_PRIVATE_KEY", apiKeyProperties['PRIVATE_KEY'])
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation "org.mockito:mockito-inline:2.11.0"
    testImplementation 'junit:junit:4.12'
    testImplementation "android.arch.core:core-testing:2.0.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    //retrofit & OkHttp
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"

    //Mockk
    testImplementation "io.mockk:mockk:$mockkVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.2.0"
    implementation "androidx.arch.core:core-testing:2.1.0"

    //Recycler view
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
}
