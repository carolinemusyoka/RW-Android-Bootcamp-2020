// Generated by view binder compiler. Do not edit!
package com.carol.mybookcollection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.carol.mybookcollection.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bookDetails;

  @NonNull
  public final TextView bookname;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final ImageView imgBookDetails;

  private ActivityBookDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView bookDetails, @NonNull TextView bookname, @NonNull FloatingActionButton fab,
      @NonNull ImageView imgBookDetails) {
    this.rootView = rootView;
    this.bookDetails = bookDetails;
    this.bookname = bookname;
    this.fab = fab;
    this.imgBookDetails = imgBookDetails;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView bookDetails = rootView.findViewById(R.id.bookDetails);
      if (bookDetails == null) {
        missingId = "bookDetails";
        break missingId;
      }
      TextView bookname = rootView.findViewById(R.id.bookname);
      if (bookname == null) {
        missingId = "bookname";
        break missingId;
      }
      FloatingActionButton fab = rootView.findViewById(R.id.fab);
      if (fab == null) {
        missingId = "fab";
        break missingId;
      }
      ImageView imgBookDetails = rootView.findViewById(R.id.imgBookDetails);
      if (imgBookDetails == null) {
        missingId = "imgBookDetails";
        break missingId;
      }
      return new ActivityBookDetailsBinding((ConstraintLayout) rootView, bookDetails, bookname, fab,
          imgBookDetails);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
